#! /bin/sh
#/************************************************************************
# * Copyright (c) 2010 doujinshuai (doujinshuai@gmail.com)
# * Create Time   : 2010-12-10
# * Last Modified : 2013-04-08
# * Desc: Nginx startup script, include a/b switch 
# ************************************************************************/
# */

#/*
# * Initialize environment variables
# */
set -e
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

#/*
# * Set runtime environment variables
# */
DEBUG=0
DESC="nginx daemon"
WORKDIR="/data1/webserver/nginx"
NAME=nginx
DAEMON=$WORKDIR/sbin/$NAME
PIDFILE=$WORKDIR/logs/$NAME.pid
CONF_FILE=$WORKDIR/conf/nginx.conf
CONF_SAFE=$WORKDIR/conf/nginx_safe.conf
CONF_A=$WORKDIR/conf/nginx_a.conf
CONF_B=$WORKDIR/conf/nginx_b.conf

#/*
# * Function to check file or directory or string
# * @arg1 is shell test condition
# * @arg2 is check object
#*/ 
function func_check_file()
{
    type=$1
    filepath=$2
    if [ ! -$type "$filepath" ]; then
        echo "Error: $filepath dont existed; Please check this file path."
        exit 99
    fi 
}  

function d_start() {
    func_check_file f $CONF_FILE
    $DAEMON -c $CONF_FILE || echo -n " nginx open mode already running"
}

function d_start_safe() {
    func_check_file f $CONF_FILE_SAFE
    $DAEMON -c $CONF_FILE_SAFE || echo -n " nginx safe mode already running"
}

function d_stop() {
    if [ -f "$PIDFILE" ]; then
        ProcessTree=$(pstree $(cat $PIDFILE))
        [ -n "$ProcessTree" ] && kill -QUIT $(cat $PIDFILE) || echo -n " not running"
    else
        MyPid=$(ps axu|grep -v grep|grep $NAME|grep conf|awk '{print $2}')
        MyPid=$((MyPid+0)) > /dev/null 2>&1
        [ $MyPid -ge 1 ] && kill -QUIT $MyPid || echo -n " not running"
    fi
}

function d_reload() {
    func_check_file f $PIDFILE
    kill -HUP `cat $PIDFILE` || echo -n " can't reload"
}

function d_test() {
    func_check_file f $CONF_FILE
    $DAEMON -c $CONF_FILE -t || echo -n " nginx test failed"
}



#/*
# * Function to check nginx runtime status
# */
function d_status() {
    RunFlag=0
    if [ -f "$PIDFILE" ]; then
        MyPid=$(cat $PIDFILE)
        ProcessTree=$(pstree $MyPid)
        [ -n "$ProcessTree" ] && RunFlag=1
    else
        MyPid=$(ps axu|grep -v grep|grep $NAME|grep conf|awk '{print $2}')
        MyPid=$((MyPid+0)) > /dev/null 2>&1
        [ $MyPid -ge 1 ] && RunFlag=1
    fi

    if [ $RunFlag -eq 1 ]; then
        echo "$NAME already running, $MyPid."
    else
        echo "$NAME don't running, $MyPid."
        exit 0
    fi  
}

#/*
# * Function to automatic pull up nginx process
# */
function d_pullup() {
    RunFlag=0
    DateTime=$(date "+F %T")
    [ $DEBUG -eq 1 ] && echo "Pull up $DESC: $NAME" 
    if [ -f "$PIDFILE" ]; then
        ProcessTree=$(pstree $(cat $PIDFILE))
        [ -n "$ProcessTree" ] && RunFlag=1
    else
        MyPid=$(ps axu|grep -v grep|grep $NAME|grep conf|awk '{print $2}')
        MyPid=$((MyPid+0)) > /dev/null 2>&1
        [ $MyPid -ge 1 ] && RunFlag=1
    fi

    if [ $RunFlag -eq 1 ]; then
        [ $DEBUG -eq 1 ] && echo "$DateTime: $NAME already runing."
    else
        func_check_file f $CONF_FILE
        $DAEMON -c $CONF_FILE || echo "$DateTime: $NAME open mode already running"
        [ $? -eq 0 ] && echo "$DateTime: $NAME start OK."
    fi
}

#/*
# ************************************
# ***     Begin Main Function      ***
# ************************************
# */

#/*
# * Check nginx command
# */
func_check_file x $DAEMON

case "$1" in
    start)
        echo -n "Starting $DESC: $NAME"
        d_start
        echo "..."
        ;;
    stop)
        echo -n "Stopping $DESC: $NAME"
        d_stop
        echo "..."
        ;;
    reload)
        echo -n "Reloading $DESC configuration..."
        d_reload
        echo "reloaded."
        ;;
    restart)
        echo -n "Restarting $DESC: $NAME"
        d_stop
        sleep 1
        d_start
        echo "..."
        ;;
    safe)
        echo -n "Switching safe mode $DESC: $NAME"
        func_check_file f $CONF_SAFE
        /bin/cp -f $CONF_SAFE $CONF_FILE
        [ $? -ne 0 ] && echo " up safe ERROR."
        d_reload
        echo "..."
        ;;
    up_a)
        echo -n "up a $DESC: $NAME"
        func_check_file f $CONF_A
        /bin/cp -f $CONF_A $CONF_FILE
        [ $? -ne 0 ] && echo " up a group ERROR."
        d_reload
        echo "..."
        ;;
    up_b)
        echo -n "up b $DESC: $NAME"
        func_check_file f $CONF_B
        /bin/cp -f $CONF_B $CONF_FILE
        [ $? -ne 0 ] && echo " up b group ERROR."
        d_reload
        echo "..."
        ;;
    status)
        echo "status $DESC: $NAME" 
        d_status
        echo "..."
        ;;
    test)
        echo "Test $DESC: $NAME" 
        d_test
        echo "..."
        ;;
    pullup)
        d_pullup
        echo "..."
        ;;
    *)
        echo "Usage: $0 {start|stop|restart|reload|status|safe|up_a|up_b|test}" >&2
        exit 1
        ;;
esac

exit 0
